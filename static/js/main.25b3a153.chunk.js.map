{"version":3,"sources":["components/nav/NavBar.js","components/Logan.jpg","components/AboutMe.js","components/journal/EntryCard.js","modules/EntryManager.js","components/journal/JournalList.js","modules/MoodManager.js","components/journal/EntryForm.js","components/journal/EntryEditForm.js","components/Application.js","components/Footer.js","components/Journal.js","index.js"],"names":["NavBar","className","to","AboutMe","src","loganpic","alt","EntryCard","entry","deletePost","title","date","mood","description","technologyTag","id","type","onClick","apiUrl","orderedResponse","getJournalEntries","fetch","then","response","json","parsedResponse","reverse","console","log","EntryList","useState","entries","setEntries","history","useHistory","deleteSetPost","postId","method","headers","useEffect","entriesFromAPI","push","map","getMoods","EntryForm","moodId","userId","setEntry","setMood","handleInputChange","event","newEntry","selectedValue","target","value","includes","parseInt","moodsFromAPI","htmlFor","onChange","required","autoFocus","placeholder","name","moo","postObj","preventDefault","window","alert","body","JSON","stringify","EntryEditForm","isLoading","setIsLoading","entryId","useParams","handleFieldChange","evnt","stateToChange","l","disabled","editedEntry","Application","exact","path","Footer","Journal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25b3a153.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./NavBar.css\"\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <ul className=\"navbar\">\r\n            <li className=\"navbar__item\">\r\n                <Link className=\"navbar_link\" to=\"/reactjournal\">About Me</Link>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n                <Link className=\"navbar_link\" to=\"/journal\">Journal</Link>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n                <Link className=\"navbar_link\" to=\"/messages\">Messages</Link>\r\n            </li>\r\n        </ul>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Logan.fc54d648.jpg\";","import React from \"react\";\r\nimport loganpic from './Logan.jpg'\r\n\r\nexport const AboutMe = () => (\r\n    <>\r\n        <div className=\"statement\">\r\n            <section className=\"personal\">\r\n                <h2>Future Web Dev</h2>\r\n                <p>I am currently enrolled in a C# focused web development bootcamp hosted by Nashville Software School</p>\r\n            </section>\r\n            <section className=\"personal\">\r\n            <picture>\r\n                <img className=\"photo\" src={loganpic} alt=\"Headshot of Logan\"/>\r\n            </picture>\r\n            </section>\r\n        </div>\r\n    </>\r\n)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const EntryCard =({entry, deletePost}) => {\r\n    return (\r\n    <article className=\"journal-card\"> \r\n        <h3 className=\"journal-title\">{entry.title}</h3>\r\n        <p className=\"journal-date\">{entry.date}   {entry.mood.mood}</p>\r\n        <p className=\"journal-entry\">{entry.description}</p>\r\n        <p className=\"journal-tags\">Tags:{entry.technologyTag}</p>\r\n        <Link to={`/journal/${entry.id}/edit`}>\r\n            <button>Edit</button>\r\n        </Link>\r\n        <button type=\"button\" onClick={() => deletePost(entry.id)}>Delete\r\n        </button>\r\n    </article>\r\n    )\r\n}","//Comment out depending on local or hosted testing\r\n// const apiUrl = \"http://localhost:8088\"\r\nconst apiUrl = \"https://firstjsonserver.herokuapp.com\"\r\n\r\nlet orderedResponse = [];\r\nexport const getJournalEntries = () => {\r\n    return fetch(`${apiUrl}/entries?_expand=user&_expand=mood`)\r\n    .then(response => response.json())\r\n    .then(parsedResponse => {\r\n        orderedResponse = parsedResponse.reverse();\r\n        console.log(orderedResponse)\r\n        return orderedResponse;\r\n    })\r\n}\r\n\r\nexport const createPost = postObj => {\r\n    return fetch(`${apiUrl}/entries`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(postObj)\r\n        \r\n    })\r\n        .then(response => response.json())\r\n        .then(getJournalEntries())\r\n        \r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return fetch(`${apiUrl}/entries/${postId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(getJournalEntries())\r\n}\r\n\r\nexport const getSingleEntry = (postId) => {\r\n    return fetch(`${apiUrl}/entries/${postId}`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const updateEntry = (postObj) => {\r\n    return fetch(`${apiUrl}/entries/${postObj.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(postObj)\r\n    })\r\n        .then(response => response.json())\r\n        .then(getJournalEntries)\r\n}","import  React, { useState, useEffect } from 'react'\r\nimport { EntryCard } from './EntryCard'\r\nimport { getJournalEntries, deletePost } from '../../modules/EntryManager'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const EntryList = () => {\r\n    const [entries, setEntries] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const getEntries = () => {\r\n        return getJournalEntries().then(entriesFromAPI => {\r\n            setEntries(entriesFromAPI)\r\n        });\r\n    };\r\n\r\n    const deleteSetPost = (id) => {\r\n        deletePost(id)\r\n        .then(() => getJournalEntries().then(setEntries))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEntries();\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <section className=\"section-content\">\r\n                <button type=\"button\"\r\n                    className=\"btn\"\r\n                    onClick={() => { history.push(\"/journal/create\") }}>\r\n                    Create entry\r\n                </button>\r\n            </section>\r\n            <div className=\"entry-cards\">\r\n            {entries.map(entry => <EntryCard entry={entry}\r\n                                            key={entry.id}\r\n                                            deletePost={deleteSetPost}/>)}\r\n            </div>\r\n        </>\r\n    )\r\n};","//Comment out depending on local or hosted testing\r\n// const apiUrl = \"http://localhost:8088\"\r\nconst apiUrl = \"https://firstjsonserver.herokuapp.com\"\r\n\r\nexport const getMoods = () => {\r\n\r\n    return fetch(`${apiUrl}/moods`)\r\n    .then(response => response.json())\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { createPost } from '../../modules/EntryManager'\r\nimport { getMoods } from '../../modules/MoodManager'\r\n\r\nexport const EntryForm = () => {\r\n    const [entry, setEntry] = useState({\r\n        title: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        technologyTag: \"\",\r\n        moodId: 0,\r\n        userId: 1\r\n    })\r\n\r\n    const [technologyTag, setTechnologyTag] = useState([])\r\n    const [mood, setMood] = useState([])\r\n\r\n    const getAllMoods = () => {\r\n        return getMoods().then(moodsFromAPI => {\r\n            setMood(moodsFromAPI)\r\n        })\r\n    }\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (event) => {\r\n        const newEntry = {...entry};\r\n        let selectedValue = event.target.value\r\n        if (event.target.id.includes(\"Id\")) {\r\n            selectedValue = parseInt(selectedValue)\r\n        }\r\n        newEntry[event.target.id] = selectedValue;\r\n        setEntry(newEntry)\r\n    }\r\n    useEffect(()=> {\r\n        getAllMoods(setMood)\r\n    }, [])\r\n\r\n    const handleSaveEntry = (event) => {\r\n        event.preventDefault()\r\n\r\n        const moodId = entry.moodId\r\n\r\n        if (moodId === 0) {\r\n            window.alert(\"Please select a Mood\")\r\n        } else {\r\n            createPost(entry).then(() => history.push('/journal'))\r\n        }\r\n    }\r\n    return (\r\n        <form className=\"EntryForm\">\r\n            <h2 className=\"EntryForm__Title\">New Journal Entry</h2>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Entry Title:</label>\r\n                    <input type=\"text\" id=\"title\" onChange={handleInputChange} required autoFocus className=\"form-control\" placeholder=\"Title\" value={entry.title} />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"technologyTag\">Tech Tags:</label>\r\n                    <input type=\"text\" id=\"technologyTag\" onChange={handleInputChange} required autoFocus className=\"form-control\" placeholder=\"TechTags\" value={entry.technologyTag} />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"moodId\">How are you feeling: </label>\r\n\t\t\t\t\t<select value={entry.moodId} name=\"moodId\" id=\"moodId\" onChange={handleInputChange} className=\"form-control\" >\r\n\t\t\t\t\t\t<option value=\"0\">Select a mood</option>\r\n\t\t\t\t\t\t{mood.map(moo => (\r\n\t\t\t\t\t\t\t<option key={moo.id} value={moo.id}>\r\n\t\t\t\t\t\t\t\t{moo.mood}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <textarea type=\"text\" id=\"description\" onChange={handleInputChange} required autoFocus className=\"form-control\" placeholder=\"Description\" value={entry.description} />\r\n                </div>\r\n            </fieldset>\r\n            <button className=\"btn btn-primary\"\r\n\t\t\t\tonClick={handleSaveEntry}>\r\n\t\t\t\tSave Entry\r\n          </button>\r\n        </form>\r\n    )\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {useParams, useHistory } from 'react-router-dom'\r\nimport { updateEntry, getSingleEntry } from '../../modules/EntryManager'\r\nimport { getMoods } from \"../../modules/MoodManager\"\r\n\r\nexport const EntryEditForm = () => {\r\n    const [entry, setEntry] = useState({   title: \"\",\r\n    date: \"\",\r\n    description: \"\",\r\n    technologyTag: \"\",\r\n    moodId: 0,\r\n    userId: 1})\r\n    console.log(\"entryedit\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [mood, setMood] = useState([])\r\n    const {entryId} = useParams();\r\n    const history = useHistory();\r\n    \r\n\r\n\r\n    const getAllMoods = () => {\r\n        return getMoods().then(moodsFromAPI => {\r\n            setMood(moodsFromAPI)\r\n        })\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getAllMoods(setMood)\r\n    }, [])\r\n\r\n    const handleFieldChange = evnt => {\r\n        const stateToChange = { ...entry}\r\n        stateToChange[evnt.target.id] = evnt.target.value;\r\n        setEntry(stateToChange);\r\n    };\r\n\r\n    const updateExistingEntry = evnt => {\r\n        evnt.preventDefault()\r\n        setIsLoading(true);\r\n        const editedEntry = {\r\n            id: entryId,\r\n            title: entry.title,\r\n            date: entry.date,\r\n            description: entry.description,\r\n            technologyTag: entry.technologyTag,\r\n            moodId: entry.moodId,\r\n            userId: entry.userId\r\n        }\r\n        updateEntry(editedEntry)\r\n            .then(()=> history.push(\"/journal\"))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSingleEntry(entryId)\r\n            .then(entry => {\r\n                setEntry(entry);\r\n                setIsLoading(false);\r\n            });\r\n    }, [entryId]);\r\n    \r\n    return (\r\n        <>\r\n            <form>\r\n                <fieldset>\r\n                    <div className=\"formgrid\">\r\n                        <input \r\n                            type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            onChange={handleFieldChange}\r\n                            id=\"title\"\r\n                            value={entry.title}\r\n                        />\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <select value={entry.moodId} name=\"moodId\" id=\"moodId\" onChange={handleFieldChange} className=\"form-control\" >\r\n\t\t\t\t\t\t  {mood.map(l => (\r\n\t\t\t\t\t\t\t<option key={l.id} value={l.id}>\r\n\t\t\t\t\t\t\t\t{l.mood}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t  \t    </select>\r\n                        <label htmlFor=\"moodId\">Mood</label>\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <textarea \r\n                            type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            onChange={handleFieldChange}\r\n                            id=\"description\"\r\n                            value={entry.description}\r\n                        />\r\n                        \r\n                    </div>\r\n                    <div className=\"alignRight\">\r\n                        <button\r\n                            type=\"button\" disabled={isLoading}\r\n                            onClick={updateExistingEntry}\r\n                            className=\"btn btn-primary\"\r\n                         >Submit</button>\r\n                        </div>\r\n                </fieldset>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport { AboutMe } from \"./AboutMe\"\r\nimport { EntryList } from \"./journal/JournalList\"\r\nimport { EntryForm } from \"./journal/EntryForm\"\r\nimport { EntryEditForm } from \"./journal/EntryEditForm\"\r\n\r\nexport const Application = () => {\r\n    return (\r\n        <>\r\n            \r\n            <Route exact path=\"/reactjournal/\">\r\n                <AboutMe />\r\n            </Route>\r\n\r\n            <Route exact path=\"/journal\">\r\n                <EntryList />\r\n            </Route>\r\n            \r\n            <Route exact path=\"/journal/create\">\r\n                <EntryForm />\r\n            </Route>\r\n\r\n            <Route exact path=\"/journal/:entryId(\\d+)/edit\">\r\n                <EntryEditForm />\r\n            </Route>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            © Logan Demmy 2021\r\n        </div>\r\n    \r\n    )\r\n}","import React from \"react\"\r\nimport { NavBar } from \"./nav/NavBar.js\"\r\nimport { Application } from \"./Application\"\r\nimport \"./Journal.css\"\r\nimport { Footer } from './Footer'\r\n\r\nexport const Journal = () => ( \r\n    <>\r\n        <h1 className=\"header\">Daily Journal</h1>\r\n        <NavBar />\r\n        <Application />\r\n        <Footer />\r\n    </>\r\n)","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport { Journal } from \"./components/Journal\"\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Journal />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}