{"version":3,"sources":["components/nav/NavBar.js","components/Logan.jpg","components/AboutMe.js","components/journal/EntryCard.js","modules/EntryManager.js","components/journal/JournalList.js","modules/MoodManager.js","components/journal/EntryForm.js","components/journal/EntryEditForm.js","components/auth/Register.js","components/auth/Login.js","components/messages/MessageCard.js","modules/MessageManager.js","components/messages/MessageList.js","components/Application.js","components/Footer.js","components/Journal.js","index.js"],"names":["NavBar","clearUser","isAuthenticated","history","useHistory","className","to","onClick","push","AboutMe","src","loganpic","alt","EntryCard","entry","deletePost","title","date","mood","description","technologyTag","id","type","apiUrl","orderedResponse","getJournalEntries","fetch","then","response","json","parsedResponse","reverse","console","log","EntryList","useState","entries","setEntries","deleteSetPost","postId","method","headers","useEffect","entriesFromAPI","map","getMoods","EntryForm","moodId","userId","setEntry","setMood","handleInputChange","event","newEntry","selectedValue","target","value","includes","parseInt","moodsFromAPI","htmlFor","onChange","required","autoFocus","placeholder","name","moo","postObj","preventDefault","window","alert","body","JSON","stringify","EntryEditForm","isLoading","setIsLoading","entryId","useParams","handleFieldChange","evnt","stateToChange","l","disabled","editedEntry","Register","setAuthUser","firstName","useRef","lastName","email","conflictDialog","style","textAlign","ref","e","current","close","onSubmit","res","user","length","userExists","showModal","createdUser","hasOwnProperty","Login","existDialog","exists","MessageCard","message","deleteMessage","getMessages","MessageList","messages","setMessages","deleteSetMessage","Application","path","exact","Footer","Journal","sessionStorage","getItem","setIsAutenicated","clear","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c321f27e.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport \"./NavBar.css\"\r\n\r\n\r\nexport const NavBar = ({clearUser, isAuthenticated}) => {\r\n    const history = useHistory()\r\n\r\n    const handleLogout = () => {\r\n        clearUser();\r\n        history.push('/');\r\n    }\r\n    return (\r\n        <ul className=\"navbar\">\r\n            <li className=\"navbar__item\">\r\n                <Link className=\"navbar_link\" to=\"/reactjournal\">About Me</Link>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n                <Link className=\"navbar_link\" to=\"/journal\">Journal</Link>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n                <Link className=\"navbar_link\" to=\"/messages\">Messages</Link>\r\n            </li>\r\n            {isAuthenticated\r\n                ? <li className=\"navbar__item\">\r\n                    <span className=\"navbar_link\" onClick={handleLogout}> Logout </span>\r\n                </li>\r\n                : <li className=\"navbar__item\">\r\n                    <Link className=\"navbar_link\" to=\"/login\">Login</Link>\r\n                </li>}\r\n        </ul>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Logan.fc54d648.jpg\";","import React from \"react\";\r\nimport loganpic from './Logan.jpg'\r\n\r\nexport const AboutMe = () => (\r\n    <>\r\n        <div className=\"statement\">\r\n            <section className=\"personal\">\r\n                <h2>Future Web Dev</h2>\r\n                <p>I am currently enrolled in a C# focused web development bootcamp hosted by Nashville Software School</p>\r\n            </section>\r\n            <section className=\"personal\">\r\n            <picture>\r\n                <img className=\"photo\" src={loganpic} alt=\"Headshot of Logan\"/>\r\n            </picture>\r\n            </section>\r\n        </div>\r\n    </>\r\n)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const EntryCard =({entry, deletePost}) => {\r\n    return (\r\n    <article className=\"journal-card\"> \r\n        <h3 className=\"journal-title\">{entry.title}</h3>\r\n        <p className=\"journal-date\">{entry.date}   {entry.mood.mood}</p>\r\n        <p className=\"journal-entry\">{entry.description}</p>\r\n        <p className=\"journal-tags\">Tags:{entry.technologyTag}</p>\r\n        <Link to={`/journal/${entry.id}/edit`}>\r\n            <button>Edit</button>\r\n        </Link>\r\n        <button type=\"button\" onClick={() => deletePost(entry.id)}>Delete\r\n        </button>\r\n    </article>\r\n    )\r\n}","//Comment out depending on local or hosted testing\r\nconst apiUrl = \"http://localhost:8088\"\r\n// const apiUrl = \"https://firstjsonserver.herokuapp.com\"\r\n\r\nlet orderedResponse = [];\r\nexport const getJournalEntries = () => {\r\n    return fetch(`${apiUrl}/entries?_expand=user&_expand=mood`)\r\n    .then(response => response.json())\r\n    .then(parsedResponse => {\r\n        orderedResponse = parsedResponse.reverse();\r\n        console.log(orderedResponse)\r\n        return orderedResponse;\r\n    })\r\n}\r\n\r\nexport const createPost = postObj => {\r\n    return fetch(`${apiUrl}/entries`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(postObj)\r\n        \r\n    })\r\n        .then(response => response.json())\r\n        .then(getJournalEntries())\r\n        \r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return fetch(`${apiUrl}/entries/${postId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(getJournalEntries())\r\n}\r\n\r\nexport const getSingleEntry = (postId) => {\r\n    return fetch(`${apiUrl}/entries/${postId}`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const updateEntry = (postObj) => {\r\n    return fetch(`${apiUrl}/entries/${postObj.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(postObj)\r\n    })\r\n        .then(response => response.json())\r\n        .then(getJournalEntries)\r\n}","import  React, { useState, useEffect } from 'react'\r\nimport { EntryCard } from './EntryCard'\r\nimport { getJournalEntries, deletePost } from '../../modules/EntryManager'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const EntryList = () => {\r\n    const [entries, setEntries] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const getEntries = () => {\r\n        return getJournalEntries().then(entriesFromAPI => {\r\n            setEntries(entriesFromAPI)\r\n        });\r\n    };\r\n\r\n    const deleteSetPost = (id) => {\r\n        deletePost(id)\r\n        .then(() => getJournalEntries().then(setEntries))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEntries();\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <section className=\"section-content\">\r\n                <button type=\"button\"\r\n                    className=\"btn\"\r\n                    onClick={() => { history.push(\"/journal/create\") }}>\r\n                    Create entry\r\n                </button>\r\n            </section>\r\n            <div className=\"entry-cards\">\r\n            {entries.map(entry => <EntryCard entry={entry}\r\n                                            key={entry.id}\r\n                                            deletePost={deleteSetPost}/>)}\r\n            </div>\r\n        </>\r\n    )\r\n};","//Comment out depending on local or hosted testing\r\nconst apiUrl = \"http://localhost:8088\"\r\n// const apiUrl = \"https://firstjsonserver.herokuapp.com\"\r\n\r\nexport const getMoods = () => {\r\n\r\n    return fetch(`${apiUrl}/moods`)\r\n    .then(response => response.json())\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { createPost } from '../../modules/EntryManager'\r\nimport { getMoods } from '../../modules/MoodManager'\r\n\r\nexport const EntryForm = () => {\r\n    const [entry, setEntry] = useState({\r\n        title: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        technologyTag: \"\",\r\n        moodId: 0,\r\n        userId: 1\r\n    })\r\n\r\n    const [technologyTag, setTechnologyTag] = useState([])\r\n    const [mood, setMood] = useState([])\r\n\r\n    const getAllMoods = () => {\r\n        return getMoods().then(moodsFromAPI => {\r\n            setMood(moodsFromAPI)\r\n        })\r\n    }\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (event) => {\r\n        const newEntry = {...entry};\r\n        let selectedValue = event.target.value\r\n        if (event.target.id.includes(\"Id\")) {\r\n            selectedValue = parseInt(selectedValue)\r\n        }\r\n        newEntry[event.target.id] = selectedValue;\r\n        setEntry(newEntry)\r\n    }\r\n    useEffect(()=> {\r\n        getAllMoods(setMood)\r\n    }, [])\r\n\r\n    const handleSaveEntry = (event) => {\r\n        event.preventDefault()\r\n\r\n        const moodId = entry.moodId\r\n\r\n        if (moodId === 0) {\r\n            window.alert(\"Please select a Mood\")\r\n        } else {\r\n            createPost(entry).then(() => history.push('/journal'))\r\n        }\r\n    }\r\n    return (\r\n        <form className=\"EntryForm\">\r\n            <h2 className=\"EntryForm__Title\">New Journal Entry</h2>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Entry Title:</label>\r\n                    <input type=\"text\" id=\"title\" onChange={handleInputChange} required autoFocus className=\"form-control\" placeholder=\"Title\" value={entry.title} />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"technologyTag\">Tech Tags:</label>\r\n                    <input type=\"text\" id=\"technologyTag\" onChange={handleInputChange} required autoFocus className=\"form-control\" placeholder=\"TechTags\" value={entry.technologyTag} />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"moodId\">How are you feeling: </label>\r\n\t\t\t\t\t<select value={entry.moodId} name=\"moodId\" id=\"moodId\" onChange={handleInputChange} className=\"form-control\" >\r\n\t\t\t\t\t\t<option value=\"0\">Select a mood</option>\r\n\t\t\t\t\t\t{mood.map(moo => (\r\n\t\t\t\t\t\t\t<option key={moo.id} value={moo.id}>\r\n\t\t\t\t\t\t\t\t{moo.mood}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <textarea type=\"text\" id=\"description\" onChange={handleInputChange} required autoFocus className=\"form-control\" placeholder=\"Description\" value={entry.description} />\r\n                </div>\r\n            </fieldset>\r\n            <button className=\"btn btn-primary\"\r\n\t\t\t\tonClick={handleSaveEntry}>\r\n\t\t\t\tSave Entry\r\n          </button>\r\n        </form>\r\n    )\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {useParams, useHistory } from 'react-router-dom'\r\nimport { updateEntry, getSingleEntry } from '../../modules/EntryManager'\r\nimport { getMoods } from \"../../modules/MoodManager\"\r\n\r\nexport const EntryEditForm = () => {\r\n    const [entry, setEntry] = useState({   title: \"\",\r\n    date: \"\",\r\n    description: \"\",\r\n    technologyTag: \"\",\r\n    moodId: 0,\r\n    userId: 1})\r\n    console.log(\"entryedit\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [mood, setMood] = useState([])\r\n    const {entryId} = useParams();\r\n    const history = useHistory();\r\n    \r\n\r\n\r\n    const getAllMoods = () => {\r\n        return getMoods().then(moodsFromAPI => {\r\n            setMood(moodsFromAPI)\r\n        })\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getAllMoods(setMood)\r\n    }, [])\r\n\r\n    const handleFieldChange = evnt => {\r\n        const stateToChange = { ...entry}\r\n        stateToChange[evnt.target.id] = evnt.target.value;\r\n        setEntry(stateToChange);\r\n    };\r\n\r\n    const updateExistingEntry = evnt => {\r\n        evnt.preventDefault()\r\n        setIsLoading(true);\r\n        const editedEntry = {\r\n            id: entryId,\r\n            title: entry.title,\r\n            date: entry.date,\r\n            description: entry.description,\r\n            technologyTag: entry.technologyTag,\r\n            moodId: entry.moodId,\r\n            userId: entry.userId\r\n        }\r\n        updateEntry(editedEntry)\r\n            .then(()=> history.push(\"/journal\"))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSingleEntry(entryId)\r\n            .then(entry => {\r\n                setEntry(entry);\r\n                setIsLoading(false);\r\n            });\r\n    }, [entryId]);\r\n    \r\n    return (\r\n        <>\r\n            <form>\r\n                <fieldset>\r\n                    <div className=\"formgrid\">\r\n                        <input \r\n                            type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            onChange={handleFieldChange}\r\n                            id=\"title\"\r\n                            value={entry.title}\r\n                        />\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <select value={entry.moodId} name=\"moodId\" id=\"moodId\" onChange={handleFieldChange} className=\"form-control\" >\r\n\t\t\t\t\t\t  {mood.map(l => (\r\n\t\t\t\t\t\t\t<option key={l.id} value={l.id}>\r\n\t\t\t\t\t\t\t\t{l.mood}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t  \t    </select>\r\n                        <label htmlFor=\"moodId\">Mood</label>\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <textarea \r\n                            type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            onChange={handleFieldChange}\r\n                            id=\"description\"\r\n                            value={entry.description}\r\n                        />\r\n                        \r\n                    </div>\r\n                    <div className=\"alignRight\">\r\n                        <button\r\n                            type=\"button\" disabled={isLoading}\r\n                            onClick={updateExistingEntry}\r\n                            className=\"btn btn-primary\"\r\n                         >Submit</button>\r\n                        </div>\r\n                </fieldset>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\n\r\nconst apiUrl = \"http://localhost:8088\"\r\n// const apiUrl = \"https://firstjsonserver.herokuapp.com\"\r\n\r\nexport const Register = ({setAuthUser}) => {\r\n    const firstName = useRef()\r\n    const lastName = useRef()\r\n    const email = useRef()\r\n    const conflictDialog = useRef()\r\n    const history = useHistory()\r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`${apiUrl}/user?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => !!user.length)\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n        existingUserCheck()\r\n            .then((userExists) => {\r\n                if (!userExists) {\r\n                    fetch(`${apiUrl}/user`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            email: email.current.value,\r\n                            name: `${firstName.current.value} ${lastName.current.value}`\r\n                        })\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                setAuthUser(createdUser)\r\n                                history.push(\"/\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    conflictDialog.current.showModal()\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <main style={{ textAlign: \"center\" }}>\r\n\r\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Daily Journal</h1>\r\n                <fieldset>\r\n                    <label htmlFor=\"firstName\"> First Name </label>\r\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"lastName\"> Last Name </label>\r\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputEmail\"> Email address </label>\r\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button type=\"submit\"> Sign in </button>\r\n                </fieldset>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\n","import React, { useRef } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\n\r\nconst apiUrl = \"http://localhost:8088\"\r\n// const apiUrl = \"https://firstjsonserver.herokuapp.com\"\r\n\r\nexport const Login = ({setAuthUser}) => {\r\n    const email = useRef()\r\n    const existDialog = useRef()\r\n    const history = useHistory()\r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`${apiUrl}/users?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => user.length ? user[0] : false)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        existingUserCheck()\r\n            .then(exists => {\r\n                if (exists) {\r\n                    setAuthUser(exists)\r\n                    history.push(\"/\")\r\n                } else {\r\n                    existDialog.current.showModal()\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <main className=\"container--login\">\r\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\r\n                <div>User does not exist</div>\r\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <section>\r\n                <form className=\"form--login\" onSubmit={handleLogin}>\r\n                    <h2>Please sign in</h2>\r\n                    <fieldset>\r\n                        <label htmlFor=\"inputEmail\"> Email address </label>\r\n                        <input ref={email} type=\"email\"\r\n                            id=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            required autoFocus />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <button type=\"submit\">\r\n                            Sign in\r\n                        </button>\r\n                    </fieldset>\r\n                </form>\r\n            </section>\r\n            <section className=\"link--register\">\r\n                <Link to=\"/register\">Not a member yet?</Link>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const MessageCard =({message, deleteMessage}) => {\r\n    return (\r\n    <article className=\"message-card\"> \r\n        <h3 className=\"message-title\">{message.title}</h3>\r\n        <p className=\"message-date\">{message.date}</p>\r\n        <p className=\"message-message\">{message.message}</p>\r\n        <Link to={`/message/${message.id}/edit`}>\r\n            <button>Edit</button>\r\n        </Link>\r\n        <button type=\"button\" onClick={() => deleteMessage(message.id)}>Delete\r\n        </button>\r\n    </article>\r\n    )\r\n}","//Comment out depending on local or hosted testing\r\nconst apiUrl = \"http://localhost:8088\"\r\n// const apiUrl = \"https://firstjsonserver.herokuapp.com\"\r\n\r\nlet orderedResponse = [];\r\nexport const getMessages = () => {\r\n\r\n    return fetch(`${apiUrl}/messages?_expand=user`)\r\n    .then(response => response.json())\r\n    .then(parsedResponse => {\r\n        orderedResponse = parsedResponse.reverse();\r\n        console.log(orderedResponse);\r\n        return orderedResponse;\r\n    })\r\n}\r\n\r\nexport const createMessage = postObj => {\r\n    return fetch(`${apiUrl}/messages`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(postObj)\r\n        \r\n    })\r\n        .then(response => response.json())\r\n        .then(getMessages())\r\n        \r\n}\r\n\r\nexport const deleteMessage = (postId) => {\r\n    return fetch(`${apiUrl}/messages/${postId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(getMessages)\r\n}\r\n\r\nexport const getSingleMessage = (postId) => {\r\n    return fetch(`${apiUrl}/messages/${postId}`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const updateMessage = (postObj) => {\r\n    return fetch(`${apiUrl}/${postObj.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(postObj)\r\n    })\r\n        .then(response => response.json())\r\n        .then(getMessages)\r\n}","import  React, { useState, useEffect } from 'react'\r\nimport { MessageCard } from './MessageCard'\r\nimport { getMessages, deleteMessage } from '../../modules/MessageManager'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const MessageList = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const getAllMessages = () => {\r\n        return getMessages().then(entriesFromAPI => {\r\n            setMessages(entriesFromAPI)\r\n        });\r\n    };\r\n\r\n    const deleteSetMessage = (id) => {\r\n        deleteMessage(id)\r\n        .then(() => getMessages().then(setMessages))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllMessages();\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <section className=\"section-content\">\r\n                <button type=\"button\"\r\n                    className=\"btn\"\r\n                    onClick={() => { history.push(\"/message/create\") }}>\r\n                    Create message\r\n                </button>\r\n            </section>\r\n            <div className=\"message-cards\">\r\n            {messages.map(message => <MessageCard message={message}\r\n                                            key={message.id}\r\n                                            deletePost={deleteSetMessage}/>)}\r\n            </div>\r\n        </>\r\n    )\r\n};","import React from \"react\"\r\nimport { Redirect, Route } from \"react-router-dom\"\r\nimport { AboutMe } from \"./AboutMe\"\r\nimport { EntryList } from \"./journal/JournalList\"\r\nimport { EntryForm } from \"./journal/EntryForm\"\r\nimport { EntryEditForm } from \"./journal/EntryEditForm\"\r\nimport { Register } from './auth/Register'\r\nimport { Login } from './auth/Login' \r\nimport { MessageList}  from './messages/MessageList'\r\n\r\nexport const Application = ({setAuthUser, isAuthenticated}) => {\r\n    return (\r\n        <>\r\n             <Route path=\"/login\">\r\n                <Login setAuthUser={setAuthUser} />\r\n            </Route>\r\n\r\n            <Route path=\"/register\">\r\n                <Register setAuthUser={setAuthUser} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/reactjournal/\">\r\n                <AboutMe />\r\n            </Route>\r\n\r\n            <Route exact path=\"/journal\">\r\n                {isAuthenticated ? <EntryList /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n            \r\n            <Route exact path=\"/journal/create\">\r\n                <EntryForm />\r\n            </Route>\r\n\r\n            <Route exact path=\"/journal/:entryId(\\d+)/edit\">\r\n                <EntryEditForm />\r\n            </Route>\r\n\r\n            <Route exact path=\"/messages\">\r\n                {isAuthenticated ? <MessageList /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            © Logan Demmy 2021\r\n        </div>\r\n    \r\n    )\r\n}","import React, {useState} from \"react\"\r\nimport { NavBar } from \"./nav/NavBar.js\"\r\nimport { Application } from \"./Application\"\r\nimport \"./Journal.css\"\r\nimport { Footer } from './Footer'\r\n\r\nexport const Journal = () => {\r\n    const [isAuthenticated, setIsAutenicated] = useState(sessionStorage.getItem(\"journal__user\") !== null)\r\n\r\n    const setAuthUser = (user) => {\r\n        sessionStorage.setItem(\"journal__user\", JSON.stringify(user))\r\n        setIsAutenicated(sessionStorage.getItem(\"journal__user\") !== null)\r\n    }\r\n\r\n    const clearUser = () => {\r\n        sessionStorage.clear();\r\n        setIsAutenicated(sessionStorage.getItem(\"journal__user\") !== null)\r\n    }\r\n    \r\n    return (\r\n    <>\r\n        <h1 className=\"header\">Daily Journal</h1>\r\n        <NavBar clearUser={clearUser} isAuthenticated={isAuthenticated}/>\r\n        <Application setAuthUser={setAuthUser} isAuthenticated={isAuthenticated}/>\r\n        <Footer />\r\n    </>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport { Journal } from \"./components/Journal\"\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Journal />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}